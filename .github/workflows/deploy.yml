name: Deploy Infrastructure and Trigger Jenkins Pipeline

on:
  push:
    branches:
      - task-7/prometheus-deployment-on-k8s

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: eu-central-1

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.5

      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init

      - name: Check Terraform Format
        working-directory: ./terraform
        run: terraform fmt -check

  validate:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.5

      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init

      - name: Validate Terraform
        working-directory: ./terraform
        run: terraform validate

  plan:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.5

      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init

      - name: Generate Terraform Plan
        working-directory: ./terraform
        run: terraform plan -out=tfplan

      - name: Show Terraform Plan
        working-directory: ./terraform
        run: terraform show -json tfplan > tfplan.json

      - name: Upload Plan File
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan
          path: ./terraform/tfplan.json

  deploy:
    runs-on: ubuntu-latest
    needs: plan
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Restore Key Pair
        run: |
          echo "${{ secrets.AWS_KEY_PAIR }}" > ./key_pair.pem
          chmod 600 ./key_pair.pem

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.5
          terraform_wrapper: false

      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init

      - name: Apply Terraform
        working-directory: ./terraform
        run: terraform apply -auto-approve

      - name: Fetch Terraform Outputs
        working-directory: ./terraform
        run: |
          echo "Fetching Terraform Outputs..."
          K8S_IP=$(terraform output -raw k8s_master_public_ip)
          echo "K8S_IP=$K8S_IP" >> $GITHUB_ENV
      

      - name: Wait for Kubernetes to Initialize
        run: |
          echo "Waiting for Kubernetes to initialize..."
          sleep 180    

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -i ./key_pair.pem ec2-user@${{ env.K8S_IP }} "echo 'SSH Connection Successful'" || {
            echo "Error: SSH connection failed.";
            exit 1;
          }

